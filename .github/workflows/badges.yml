name: Badges

on:
  push:
    paths:
      - Badges.md
  workflow_dispatch:

jobs:
  update-badges:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update badges in README.md from Badges.md
        run: |
          function color_for() {
            value=$1
            if (( value >= 80 )); then echo "brightgreen"
            elif (( value >= 60 )); then echo "blue"
            elif (( value >= 40 )); then echo "yellow"
            else echo "red"
            fi
          }

          badges_md=$(mktemp)
          current_section=""
          video_acc=0
          audio_acc=0

          while IFS= read -r line || [[ -n "$line" ]]; do
            if [[ "$line" =~ ^Input:\ (.+)$ ]]; then
              if [[ -n "$current_section" ]]; then
                vcolor=$(color_for $video_acc)
                acolor=$(color_for $audio_acc)
                echo "## $current_section" >> "$badges_md"
                echo "<!-- BADGES_${current_section^^}_START -->" >> "$badges_md"
                echo "![Video Accuracy](https://img.shields.io/badge/Video_Accuracy-${video_acc}%25-$vcolor) ![Audio Accuracy](https://img.shields.io/badge/Audio_Accuracy-${audio_acc}%25-$acolor)" >> "$badges_md"
                echo "<!-- BADGES_${current_section^^}_END -->" >> "$badges_md"
                echo "" >> "$badges_md"
              fi
              current_section="${BASH_REMATCH[1]}"
              video_acc=0
              audio_acc=0
            elif [[ "$line" =~ Video_accuracy\ *=\ *([0-9]+)% ]]; then
              video_acc=${BASH_REMATCH[1]}
            elif [[ "$line" =~ Audio_accuracy\ *=\ *([0-9]+)% ]]; then
              audio_acc=${BASH_REMATCH[1]}
            fi
          done < Badges.md

          if [[ -n "$current_section" ]]; then
            vcolor=$(color_for $video_acc)
            acolor=$(color_for $audio_acc)
            echo "## $current_section" >> "$badges_md"
            echo "<!-- BADGES_${current_section^^}_START -->" >> "$badges_md"
            echo "![Video Accuracy](https://img.shields.io/badge/Video_Accuracy-${video_acc}%25-$vcolor) ![Audio Accuracy](https://img.shields.io/badge/Audio_Accuracy-${audio_acc}%25-$acolor)" >> "$badges_md"
            echo "<!-- BADGES_${current_section^^}_END -->" >> "$badges_md"
            echo "" >> "$badges_md"
          fi

          readme="README.md"
          tmp_readme=$(mktemp)
          cp "$readme" "$tmp_readme"
          sections=$(grep '^## ' "$badges_md" | sed 's/## //')

          for section in $sections; do
            block=$(sed -n "/<!-- BADGES_${section^^}_START -->/,/<!-- BADGES_${section^^}_END -->/p" "$badges_md")
            esc_block=$(printf '%s\n' "$block" | sed -e 's/[\/&]/\\&/g' | tr '\n' '\r')
            sed -i "0,/<!-- BADGES_${section^^}_START -->/,/<!-- BADGES_${section^^}_END -->/c\\$(echo -e "$esc_block" | tr '\r' '\n')" "$tmp_readme"
          done

          mv "$tmp_readme" "$readme"

      - name: Commit and push changes
        run: |
          git config user.name "ramesh-github-actions"
          git config user.email "github-actions@github.com"
          git add README.md

          if ! git diff --cached --quiet; then
            git commit -m "[skip ci] Update badges from Badges.md"
            git pull --rebase origin main
            git push origin main
          else
            echo "No changes to commit"
          fi
